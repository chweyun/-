💡 Highlight
- 객체지향 설계라는 예술은 적절한 객체에게 적절한 책임을 할당하는 것에서 시작된다.
- 객체의 자율성은 객체의 내부와 외부를 명확하게 구분하는 것으로부터 나온다.
- 중요한 것은 어떤 클래스가 필요한가가 아니라 어떤 객체들이 어떤 메시지를 주고받으며 협력하는가다.


# 역할, 책임, 협력
역할과 책임은 협력이 원활하게 진행되는 데 필요한 핵심적인 구성 요소다.

- 여러 사람이 동일한 역할을 수행할 수 있다. > 여러 객체가 동일한 역할을 수행할 수 있다.
- 역할은 대체 가능성을 의미한다. > 역할은 대체 가능성을 의미한다.
- 책임을 수행하는 방법은 자율적으로 선택할 수 있다. > 각 객체는 책임을 수행하는 방법을 자율적으로 선택할 수 있다.
- 한 사람이 동시에 여러 역할을 수행할 수 있다. > 하나의 객체가 동시에 여러 역할을 수행할 수 있다.

동일한 요청에 대해 서로 다른 방식으로 응답할 수 있는 능력을 다형성(polymorphism)이라고 한다.
협력의 핵심은 특정한 책임을 수행하는 역할들 간의 연쇄적인 요청과 응답을 통해 목표를 달성한다는 것이다.
객체지향 설계라는 예술은 적절한 객체에게 적절한 책임을 할당하는 것에서 시작된다. 얼마나 적절한 책임을 선택하느냐가 애플리케이션의 아름다움을 결정한다.

# 협력 속에 사는 객체
- 객체는 충분히 '협력적'이어야 한다.
- 객체는 충분히 '자율적'이어야 한다.

객체지향 설계의 묘미는 다른 객체와 조화롭게 협력할 수 있을 만큼 충분히 개방적인 동시에 협력에 참여하는 방법을 스스로 결정할 수 있을 만큼 충분히 자율적인 객체들의 공동체를 설계하는 데 있다.

객체의 자율성은 객체의 내부와 외부를 명확하게 구분하는 것으로부터 나온다.

# 객체지향의 본질
훌륭한 객체지향 설계자가 되기 위해 거쳐야 할 첫 번째 도전은 코드를 담는 클래스의 관점에서 메시지를 주고받는 객체의 관점으로 사고의 중심을 전환하는 것이다.
중요한 것은 어떤 클래스가 필요한가가 아니라 어떤 객체들이 어떤 메시지를 주고받으며 협력하는가다.
클래스의 구조와 메서드가 아니라 객체의 역할, 책임, 협력에 집중하라.